---
import Cube3x3 from "./Cube3x3.astro"
import Skewed from "./Skewed.astro"
import Pyramix from "./Pyramix.astro"
import Cube2x2 from "./Cube2x2.astro"
import Megaminx from "./Megaminx.astro"
import SkewebX from "./SkewbExtreme.astro"
---


<div class="bg-cyan-200 text-center pt-6" >
  <h1 class="text-2xl md:text-6xl mx-auto w-fit">Más allá del simple Cubo Rubik</h1>
  <p class="text-sm md:text-2xl">Aparte del clásico cubo 3x3, existen muchas variantes en formas, colores y números de caras. ¡El límite es la imagincación!</p>
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 mt-6" >
    <Cube3x3/>
    <Skewed/>
    <Pyramix/>
    <Cube2x2/>
    <Megaminx/>
    <SkewebX/>
  </div>
</div>

<!-- <script>
  import * as THREE from "three";
  import { GLTFLoader } from "three/addons/loaders/GLTFLoader.js";

  const $cubes = document.getElementById("cubes-container");

  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);
  camera.position.z = 10;
  scene.add(camera);

  const renderer = new THREE.WebGLRenderer();
  // const w = $cubes?.offsetWidth
  // const h = $cubes?.offsetHeight
  renderer.setSize($cubes?.offsetWidth, window.innerHeight);
  renderer.setClearColor(0xffffff, 0);

  $cubes?.appendChild(renderer.domElement);
  const loader = new GLTFLoader();
  let models = [];

  const ambientLight = new THREE.AmbientLight(0xffffff);
  ambientLight.intensity = 3;
  scene.add(ambientLight);

  // Define la función para cargar modelos
  function loadModel(path, position, scale) {
    loader.load(path, (gltf) => {
      const model = gltf.scene;
      model.position.set(position[0], position[1], position[2]);
      model.scale.set(scale[0], scale[1], scale[2]);
      models.push(model);
      scene.add(model);
    });
  }

  // Carga de modelos  Posicion xyz
  loadModel("/assets/3dmodels/rubiks3x3.glb", [0, 0, 0], [0.4, 0.4, 0.4]);
  loadModel("/assets/3dmodels/skewed.glb", [0, 5, 0], [15, 15, 15]);
  loadModel("/assets/3dmodels/megaminx.glb", [8, 0, 0], [0.7, 0.7, 0.7]);
  loadModel("/assets/3dmodels/skewb_xtreme.glb", [-8, 5, 0], [0.8, 0.8, 0.8]);
  loadModel("/assets/3dmodels/pyramix.glb", [8, 5, 0], [0.8, 0.8, 0.8]);
  loadModel("/assets/3dmodels/rubiks2x2.glb", [-8, 0, 0], [0.02, 0.02, 0.02]);


  function animate() {
    requestAnimationFrame(animate);

    // Actualiza la posición y rotación de cada modelo
    if (models.length > 0) {
      const time = Date.now() * 0.001;
      models.forEach((model) => {
        model.rotation.y = time * 0.5;
        model.rotation.x = time * 0.5;
      });
    }

    renderer.render(scene, camera);
  }

  animate();
</script> -->
